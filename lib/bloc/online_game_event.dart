// Generated by Qoder AI (Model: claude-sonnet-4-5-20250929) - 2025-10-22
// Task: 定义在线对战事件

import 'package:equatable/equatable.dart';
import '../models/move.dart';

/// 在线对战事件基类
abstract class OnlineGameEvent extends Equatable {
  const OnlineGameEvent();

  @override
  List<Object?> get props => [];
}

/// 开始匹配事件
class StartMatchingEvent extends OnlineGameEvent {
  final String playerId;

  const StartMatchingEvent(this.playerId);

  @override
  List<Object?> get props => [playerId];

  @override
  String toString() => 'StartMatchingEvent(playerId: $playerId)';
}

/// 取消匹配事件
class CancelMatchingEvent extends OnlineGameEvent {
  const CancelMatchingEvent();

  @override
  String toString() => 'CancelMatchingEvent()';
}

/// 匹配成功事件（从服务器接收）
class MatchFoundEvent extends OnlineGameEvent {
  final String matchId;
  final String opponentId;
  final bool isFirstPlayer;

  const MatchFoundEvent({
    required this.matchId,
    required this.opponentId,
    required this.isFirstPlayer,
  });

  @override
  List<Object?> get props => [matchId, opponentId, isFirstPlayer];

  @override
  String toString() =>
      'MatchFoundEvent(matchId: $matchId, opponentId: $opponentId, '
      'isFirst: $isFirstPlayer)';
}

/// 本地玩家移动事件
class LocalPlayerMovedEvent extends OnlineGameEvent {
  final Move move;

  const LocalPlayerMovedEvent(this.move);

  @override
  List<Object?> get props => [move];

  @override
  String toString() => 'LocalPlayerMovedEvent(move: $move)';
}

/// 对手移动事件（从服务器接收）
class OpponentMovedEvent extends OnlineGameEvent {
  final Move move;

  const OpponentMovedEvent(this.move);

  @override
  List<Object?> get props => [move];

  @override
  String toString() => 'OpponentMovedEvent(move: $move)';
}

/// 对手断线事件
class OpponentDisconnectedEvent extends OnlineGameEvent {
  const OpponentDisconnectedEvent();

  @override
  String toString() => 'OpponentDisconnectedEvent()';
}

/// 重新连接事件
class ReconnectEvent extends OnlineGameEvent {
  const ReconnectEvent();

  @override
  String toString() => 'ReconnectEvent()';
}

/// 游戏结束事件（在线对战）
class OnlineGameOverEvent extends OnlineGameEvent {
  final String winnerId;
  final String reason;

  const OnlineGameOverEvent({
    required this.winnerId,
    required this.reason,
  });

  @override
  List<Object?> get props => [winnerId, reason];

  @override
  String toString() =>
      'OnlineGameOverEvent(winnerId: $winnerId, reason: $reason)';
}

/// 退出在线对战事件
class ExitOnlineGameEvent extends OnlineGameEvent {
  const ExitOnlineGameEvent();

  @override
  String toString() => 'ExitOnlineGameEvent()';
}
