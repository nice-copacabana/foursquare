// Generated by Qoder AI (Model: claude-sonnet-4-5-20250929) - 2025-10-22
// Task: 创建WebSocket消息类型枚举

/// WebSocket消息类型
enum MessageType {
  /// 匹配请求
  matchRequest,
  
  /// 匹配成功
  matchFound,
  
  /// 匹配取消
  matchCanceled,
  
  /// 移动指令
  move,
  
  /// 游戏结束
  gameOver,
  
  /// 断开连接
  disconnect,
  
  /// 重新连接
  reconnect,
  
  /// 心跳包
  heartbeat,
  
  /// 错误消息
  error,
}

extension MessageTypeExtension on MessageType {
  /// 转换为JSON字符串
  String toJson() {
    return toString().split('.').last;
  }
  
  /// 从JSON字符串创建
  static MessageType fromJson(String json) {
    return MessageType.values.firstWhere(
      (e) => e.toString().split('.').last == json,
      orElse: () => MessageType.error,
    );
  }
  
  /// 获取显示名称
  String get displayName {
    switch (this) {
      case MessageType.matchRequest:
        return '匹配请求';
      case MessageType.matchFound:
        return '匹配成功';
      case MessageType.matchCanceled:
        return '匹配取消';
      case MessageType.move:
        return '移动';
      case MessageType.gameOver:
        return '游戏结束';
      case MessageType.disconnect:
        return '断开连接';
      case MessageType.reconnect:
        return '重新连接';
      case MessageType.heartbeat:
        return '心跳';
      case MessageType.error:
        return '错误';
    }
  }
  
  /// 是否需要响应
  bool get requiresResponse {
    switch (this) {
      case MessageType.matchRequest:
      case MessageType.move:
      case MessageType.heartbeat:
        return true;
      default:
        return false;
    }
  }
}
