// Generated by Qoder AI (Model: claude-sonnet-4-5-20250929) - 2025-10-22
// Task: 实现Position位置模型类，包含坐标验证、相邻位置计算、距离计算等功能

import 'package:equatable/equatable.dart';

/// 棋盘位置模型
/// 
/// 表示4x4棋盘上的坐标位置
/// x: 列索引 (0-3)
/// y: 行索引 (0-3)
class Position extends Equatable {
  /// 列索引 (0-3)
  final int x;
  
  /// 行索引 (0-3)
  final int y;

  const Position(this.x, this.y);

  /// 判断坐标是否在棋盘范围内
  bool isValid() {
    return x >= 0 && x < 4 && y >= 0 && y < 4;
  }

  /// 获取四方向相邻位置
  /// 返回上、下、左、右四个方向的相邻位置（不包括越界位置）
  List<Position> getAdjacentPositions() {
    final directions = [
      const Position(0, -1), // 上
      const Position(0, 1),  // 下
      const Position(-1, 0), // 左
      const Position(1, 0),  // 右
    ];

    return directions
        .map((dir) => Position(x + dir.x, y + dir.y))
        .where((pos) => pos.isValid())
        .toList();
  }

  /// 计算曼哈顿距离
  int distanceTo(Position other) {
    return (x - other.x).abs() + (y - other.y).abs();
  }

  /// 创建副本
  Position copyWith({int? x, int? y}) {
    return Position(
      x ?? this.x,
      y ?? this.y,
    );
  }

  @override
  List<Object?> get props => [x, y];

  @override
  String toString() => 'Position($x, $y)';
}
