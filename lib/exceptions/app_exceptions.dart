// Generated by Qoder AI (Model: claude-sonnet-4-5-20250929) - 2025-10-22
// Task: 定义应用异常体系

/// 应用异常基类
abstract class AppException implements Exception {
  final String message;
  final String? details;
  final dynamic originalError;

  const AppException(
    this.message, {
    this.details,
    this.originalError,
  });

  @override
  String toString() {
    final buffer = StringBuffer(message);
    if (details != null) {
      buffer.write('\n详情: $details');
    }
    if (originalError != null) {
      buffer.write('\n原始错误: $originalError');
    }
    return buffer.toString();
  }
}

/// 游戏逻辑异常
class GameException extends AppException {
  const GameException(
    super.message, {
    super.details,
    super.originalError,
  });
}

/// 非法移动异常
class InvalidMoveException extends GameException {
  final String reason;

  const InvalidMoveException(
    this.reason, {
    super.details,
  }) : super('非法移动');

  @override
  String toString() => reason;
}

/// 游戏已结束异常
class GameOverException extends GameException {
  const GameOverException({
    super.details,
  }) : super('游戏已结束');
}

/// 网络异常
class NetworkException extends AppException {
  const NetworkException(
    super.message, {
    super.details,
    super.originalError,
  });
}

/// 连接失败异常
class ConnectionFailedException extends NetworkException {
  const ConnectionFailedException({
    super.details,
    super.originalError,
  }) : super('无法连接到服务器');
}

/// 超时异常
class TimeoutException extends NetworkException {
  const TimeoutException({
    super.details,
  }) : super('连接超时');
}

/// 存储异常
class StorageException extends AppException {
  const StorageException(
    super.message, {
    super.details,
    super.originalError,
  });
}

/// 保存失败异常
class SaveFailedException extends StorageException {
  const SaveFailedException({
    super.details,
    super.originalError,
  }) : super('保存失败');
}

/// 加载失败异常
class LoadFailedException extends StorageException {
  const LoadFailedException({
    super.details,
    super.originalError,
  }) : super('加载失败');
}

/// AI异常
class AIException extends AppException {
  const AIException(
    super.message, {
    super.details,
    super.originalError,
  });
}

/// AI无可用移动异常
class NoAvailableMoveException extends AIException {
  const NoAvailableMoveException({
    super.details,
  }) : super('AI无可用移动');
}

/// 音频异常
class AudioException extends AppException {
  const AudioException(
    super.message, {
    super.details,
    super.originalError,
  });
}

/// 音频文件未找到异常
class AudioFileNotFoundException extends AudioException {
  final String fileName;

  const AudioFileNotFoundException(
    this.fileName, {
    super.details,
  }) : super('音频文件未找到');

  @override
  String toString() => '音频文件未找到: $fileName';
}
